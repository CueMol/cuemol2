name: Build

on:
  pull_request:
    types: [opened, synchronize]
  #    types: [assigned, opened, synchronize, reopened, labeled, unlabeled, edited, closed, ready_for_review, locked, unlocked, review_requested, review_request_removed]

env:
  PYTHON_VERSION: 3.7

jobs:
  build_win:
    name: "Windows Latest MSVC"
    runs-on: windows-latest
    steps:

    - name: Install prerequisite 1
      run: |
        choco install wget
        choco install winflexbison3

    - uses: actions/checkout@v1

    - name: Install prerequisite 2
      shell: bash
      run: |
        cd ../..
        pwd
        wget https://github.com/CueMol/build_prerequisite/releases/download/v0.0.1/win_build_set.tar.gz -O win_build_set.tar.gz
        tar xzvf win_build_set.tar.gz
        which win_bison.exe
        which win_flex.exe

        # TOPDIR=`pwd`
        # ls -lR $TOPDIR

    - name: Build
      id: build
      shell: cmd
      run: |
        pwd
        mkdir build
        cd build
        cmake .. -G "Visual Studio 16 2019" -A x64 -DBOOST_ROOT=%BOOST_ROOT_1_69_0% -DCMAKE_PREFIX_PATH=d:\a\win_build -DCGAL_ROOT=d:\a\win_build\CGAL-4.14.3 -DCGAL_DISABLE_GMP=ON -DBUILD_GUI=OFF -DBUILD_PYTHON_BINDINGS=ON
        dir
        cmake --build . -v --config Release
        dir Release

  build_mac:
    name: "MacOS Latest clang"
    runs-on: macos-latest
    steps:

    - name: Install prerequisite 1
      run: |
        brew install boost xz little-cms2 glew
        brew list
        pwd
        
    - uses: actions/checkout@v1

    - name: Setup python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Check python ${{ env.PYTHON_VERSION }}
      shell: bash
      env:
        python-version: ${{ env.PYTHON_VERSION }}
      run: |
        echo $PYTHON_VERSION
        echo $pythonLocation
        PYTHON=`which python$PYTHON_VERSION`
        echo $PYTHON
        echo "::set-env name=PYTHON::$PYTHON"
      
    - name: Install prerequisite 2
      shell: bash
      run: |
        echo $PYTHON
        cd ${GITHUB_WORKSPACE}
        pwd
        wget https://github.com/CueMol/build_prerequisite/releases/download/v0.0.1/mac_build_set.tar.gz -O mac_build_set.tar.gz
        tar xvzf mac_build_set.tar.gz
        ls -la
        $PYTHON -m pip install --upgrade pip setuptools wheel
        $PYTHON -m pip install pytest

    - name: Build
      id: build
      shell: bash
      run: |
        pwd
        # which python3.8
        $PYTHON --version
        env MAKEFLAGS=-j4 \
          BUILD_MINIMUM_MODULES=ON \
          CMAKE_PREFIX_PATH=${GITHUB_WORKSPACE}/mac_build_set \
          $PYTHON -m pip install -v -e .

        # mkdir build
        # cd build
        # cmake --version
        # cmake .. -G "Unix Makefiles" -DCMAKE_PREFIX_PATH=${GITHUB_WORKSPACE}/mac_build_set -DCGAL_DISABLE_GMP=ON -DBUILD_GUI=OFF -DBUILD_PYTHON_BINDINGS=ON -DFFTW_ROOT=${GITHUB_WORKSPACE}/mac_build_set/fftw
        # ls -la
        # cmake --build . -v --config Release

    - name: Tests
      shell: bash
      run: |
        # sh run_lldb.sh
        # cd tests
        $PYTHON -m pip list
        $PYTHON -c "import cuemol"
        pytest tests

    # - name: Setup tmate session
    #   uses: mxschmitt/action-tmate@v2
