<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/global.css" type="text/css"?>
<?xml-stylesheet href="chrome://cuemol2/content/cuemol2.css" type="text/css"?>
<?xul-overlay href="chrome://cuemol2/content/propeditor-generic-page.xul"?>
<?xul-overlay href="chrome://cuemol2/content/property/renderer-common-page.xul"?>

<!-- -*- xml -*- -->

<dialog
  id     = "simple-propdlg"
  title  = "Simple Rend Properties"
  xmlns  = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  buttons="extra1,extra2,accept,cancel"
  buttonlabelextra1="Reset all to default"
  ondialogextra1="gMain.resetAllToDefault()"
  buttonlabelextra2="Apply"
  ondialogextra2="gMain.apply()"
  ondialogaccept="return gMain.onDialogAccept(event);">
  
  <script type="application/javascript" src="chrome://cuemol2/content/cuemol2-utils.js"/>
  <script type="application/javascript" src="chrome://cuemol2/content/propeditor-generic-page.js"/>
  <script type="application/javascript" src="chrome://cuemol2/content/property/renderer-common-page.js"/>


  <!--<overlaytarget id="scripts-overlay-target"/>-->

  <tabbox id="propdlg-tabbox" flex="1">
    <tabs id="tabs-overlay-target">
      <tab label="Simple" id="simple-tab"/>
    </tabs>

    <tabpanels id="tabpanels-overlay-target" flex="1">
      <tabpanel flex="1" orient="vertical">

	<hbox flex="0" align="center">
	  <label value="Line width:" flex="0"/>
	  <numslider id="simplepage-linewidth" flex="1" size="3"
	    decimalplaces="1" min="0" max="10" increment="0.2" unit="px"
	    onchange="gSimple.validateWidgets()"/>
	</hbox>

	<overlaytarget id="renderer-common-page"/>

	<spacer flex="1"/>


      </tabpanel>
    </tabpanels>
  </tabbox>

  <script type="application/javascript">
    <![CDATA[
// Make generic-prop page object
window.gMain = new cuemolui.GenPropEdit();

// Make renderer-common-prop object
window.gComm = new cuemolui.RendCommPropEdit(gMain);

window.gSimple = ( function () { try {

var SimplePropEdit = function ()
{
};

SimplePropEdit.prototype.onLoad = function ()
{
  dd("SimplePropEdit> OnLoad called");
  this.mLineWidth = document.getElementById("simplepage-linewidth");
  gComm.onLoad();

  var type = gMain.getRendType();
  dd("type = "+type);
  if (type=="trace") {
    let elem = document.getElementById("simple-propdlg");
    elem.setAttribute("title", "Trace renderer properties");
    elem = document.getElementById("simple-tab");
    elem.setAttribute("label", "Trace");
  }
};

SimplePropEdit.prototype.onActivate = function ()
{
  dd("SimplePropPage ENTER");
  this.updateWidgets();

  gComm.updateWidgets();
};

SimplePropEdit.prototype.onInactivate = function ()
{
  dd("SimplePropPage LEAVE");
  this.validateWidgets();

  gComm.validateWidgets();
};

/// Intrn-data --> widget
SimplePropEdit.prototype.updateWidgets = function ()
{
  dd("SimplePropEdit.updateWidgets called");
  var elem = gMain.findPropData("width");
  this.mLineWidth.value = elem.value;
};

/// Widget --> Intrn-data
SimplePropEdit.prototype.validateWidgets = function ()
{
  dd("SimplePropEdit.validateWidgets> called");
  var new_val = parseFloat(this.mLineWidth.value);
  if (isNaN(new_val) || new_val<=0.0 || new_val>10)
    return;

  gMain.updateData("width", new_val);
};

return new SimplePropEdit();

} catch (e) {debug.exception(e)}
} ) ();

gMain.registerPage("simple-tab", gSimple);

]]>  
  </script>

</dialog>

