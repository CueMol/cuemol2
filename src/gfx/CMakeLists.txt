# Normal C++ source files
SET(GFX_SRCS
gfx.cpp
AbstractColor.cpp
SolidColor.cpp
GradientColor.cpp
NamedColor.cpp
MolColorRef.cpp
DisplayContext.cpp
TextRenderManager.cpp
ColorTable.cpp
StrColorFormat.cpp
Mesh.cpp
Material.cpp
PixelBuffer.cpp
ColCompiler.cpp
DrawElem.cpp
DrawAttrArray.cpp
LabelCacheImpl.cpp
SphereSet.cpp
CmsXform.cpp
ColProfMgr.cpp
Hittest.cpp
)

# Normal C++ header files
SET(GFX_HDRS
AbstractColor.hpp
CmsXform.hpp
ColCompiler.hpp
ColProfMgr.hpp
ColorTable.hpp
DisplayContext.hpp
DrawAttrArray.hpp
DrawElem.hpp
GradientColor.hpp
Hittest.hpp
HittestContext.hpp
LabelCacheImpl.hpp
Material.hpp
Mesh.hpp
MolColorRef.hpp
NamedColor.hpp
PixelBuffer.hpp
SolidColor.hpp
SphereSet.hpp
TextImgBuf.hpp
TextRenderManager.hpp
# color_parser.h
gfx.hpp
)

###############
# CueMol interface definitions for MCWRAPGEN
SET(GFX_MCWG_QIFS
  AbstractColor.qif
  Color.qif
  GradientColor.qif
  NamedColor.qif
  MolColorRef.qif
  TextImgBuf.qif
)

# module loader generated by MCWG
SET(GFX_MODLDR_SRC gfx.moddef)

MCWRAPGEN_CLASS(GFX_SRCS ${GFX_MCWG_QIFS})
MCWRAPGEN_MODULE(GFX_SRCS ${GFX_MODLDR_SRC} ${GFX_MCWG_QIFS})

###############
# Color parser
BISON_TARGET(gfx_color_parser
  color_parser.yxx
  ${CMAKE_CURRENT_BINARY_DIR}/color_parser.cpp
  COMPILE_FLAGS "-p col")
FLEX_TARGET(gfx_color_scanner
  color_scanner.lxx
  ${CMAKE_CURRENT_BINARY_DIR}/color_scanner.cpp
  COMPILE_FLAGS "-P col")
ADD_FLEX_BISON_DEPENDENCY(gfx_color_scanner gfx_color_parser)

# message(STATUS "BISON_gfx_color_parser_OUTPUTS: ${BISON_gfx_color_parser_OUTPUTS}")
# message(STATUS "FLEX_gfx_color_scanner_OUTPUTS: ${FLEX_gfx_color_scanner_OUTPUTS}")
list(APPEND GFX_SRCS ${BISON_gfx_color_parser_OUTPUTS})
list(APPEND GFX_SRCS ${FLEX_gfx_color_scanner_OUTPUTS})
# message("GFX_SRCS ${GFX_SRCS}")

#########################
# gfx library target

add_library(gfx SHARED)

# LCMS2 support
find_package(LCMS2)
message(STATUS "LCMS2_FOUND: ${LCMS2_FOUND} INCLUDE_DIR: ${LCMS2_INCLUDE_DIR} LIBRARIES: ${LCMS2_LIBRARIES}")

if (${LCMS2_FOUND})
  # add_definitions(-DHAVE_LCMS2_H=1)
  target_compile_definitions(gfx PUBLIC HAVE_LCMS2_H=1)
  list(APPEND GFX_LINK_LIBRARIES ${LCMS2_LIBRARIES})
endif()

if (WIN32)
  # add_definitions(-DGFX_EXPORTS=1)
  target_compile_definitions(gfx PUBLIC GFX_EXPORTS=1)
endif()

target_sources(gfx
  PRIVATE ${GFX_SRCS} ${MCWG_HEADERS}
  PUBLIC FILE_SET HEADERS 
  BASE_DIRS ${PROJECT_SOURCE_DIR}/src
  FILES ${GFX_HDRS}
)
target_include_directories(
  gfx PRIVATE
  ${CMAKE_SOURCE_DIR}/src
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${CMAKE_BINARY_DIR}/src
  ${Boost_INCLUDE_DIRS}
  ${LCMS2_INCLUDE_DIR}
)
target_link_libraries(gfx PRIVATE qlib ${GFX_LINK_LIBRARIES})

MCWRAPGEN_SCR_WRAPPERS(gfx)

install(TARGETS gfx
  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
  FILE_SET HEADERS
)
