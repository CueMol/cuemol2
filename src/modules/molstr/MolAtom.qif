// -*-Mode: C++;-*-
//
// $Id: MolAtom.qif,v 1.8 2011/03/16 17:24:11 rishitani Exp $

#ifndef MOL_ATOM_QIF_INCLUDED_
#define MOL_ATOM_QIF_INCLUDED_

#include <qlib/Vector.qif>

runtime_class MolAtom
{
  client_hdr "MolAtom.hpp";
  client_name molstr::MolAtom;

  scriptable;

  // cloneable option generates instance creation with copy constructor
  cloneable;
  smartptr;

  property integer id => redirect(getID, xxx) (readonly);

  //property string name => m_name;
  property string name => redirect(getName, setName);
  property string element => redirect(getElementName, setElementName);
  property real bfac => redirect(getBfac, setBfac);
  property real occ => redirect(getOcc, setOcc);

  property string confid => redirect(getConfIDScr, setConfIDScr);

  // property real charge => redirect(getCharge, setCharge);
  // property real radius => redirect(getRadius, setRadius);

  property object<Vector> pos => redirect(getPosScr, setPosScr);

  property string chainName => redirect(getChainName, xxx) (readonly);
  property string residIndex => redirect(getResIndexScr, xxx) (readonly);
  property string residName => redirect(getResName, xxx) (readonly);

  string formatMsg();
  string toString();

  void setU(integer i, integer j, real uij);
  real getU(integer i, integer j);

  boolean removeAtomProp(string name);
  string getPropTypeName(string name);
  integer getAtomPropInt(string name);
  void setAtomPropInt(string name, integer value);

  ////

  //real distance(MolAtom$) => calcDist;
  real dihedral(object<MolAtom$>,object<MolAtom$>,object<MolAtom$>) => calcDihe;

};

#endif
