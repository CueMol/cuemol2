# Dependent libs
SET(QLIB_LINK_LIBRARIES
  pcre
  expat
  qmzlib
  Boost::filesystem
  Boost::timer
  Boost::chrono
  Boost::thread
  )

# Normal C++ source files
SET(QLIB_SRCS
NamedObject.cpp
LMsgLog.cpp
ClassRegistry.cpp
LClass.cpp
LRcObject.cpp
LVariant.cpp
LVarDict.cpp
LPropSupport.cpp
LPropContainer.cpp
LScrObjects.cpp
LScrSmartPtr.cpp
LChar.cpp
LString.cpp
LUnicode.cpp
LThread.cpp
ObjectManager.cpp
Utils.cpp
ArrayIOImpl.cpp
PosixFileStream.cpp
PrintStream.cpp
LineStream.cpp
BinStream.cpp
StringStream.cpp
XmlInStream.cpp
ExpatInStream.cpp
GzipStream.cpp
Base64Stream.cpp
PipeStream.cpp
VectorHelper.cpp
MatrixHelper.cpp
LRegExpr.cpp
LLogEvent.cpp
EventManager.cpp
LDOM2Stream.cpp
LDOM2Tree.cpp
LScrVector4D.cpp
LScrMatrix4D.cpp
LScrQuat.cpp
LScrTime.cpp
LScrRangeSet.cpp
LWrapper.cpp
LDataSrcContainer.cpp
LObjStream3.cpp
LProcMgr.cpp
LPerfMeas.cpp
qlib.cpp
)

# API header files
SET(QLIB_HDRS
Array.hpp
ArrayIOImpl.hpp
BSPTree.hpp
Base64Stream.hpp
BinStream.hpp
Box3D.hpp
ByteMap.hpp
ChunkDelimFilter.hpp
ChunkFilterImpl2.hpp
ClassRegistry.hpp
EventCaster.hpp
EventManager.hpp
ExpatInStream.hpp
FileStream.hpp
FilterStream.hpp
FormatStream.hpp
GenericTable.hpp
GzipStream.hpp
HashMap.hpp
HashTable.hpp
IndexedTable.hpp
IntVec3D.hpp
LByteArray.hpp
LChar.hpp
LClass.hpp
LClassUtils.hpp
LDOM2Stream.hpp
LDOM2Tree.hpp
LDOMTree.hpp
LDataSrcContainer.hpp
LDebug.hpp
LDebugAssert.hpp
LDebugNew.hpp
LDynamic.hpp
LEvent.hpp
LExceptions.hpp
LLogEvent.hpp
LMapPropContainer.hpp
LMsgLog.hpp
LObjStream3.hpp
LObjStreamXMLParser2.hpp
LObject.hpp
LPerfMeas.hpp
LProcMgr.hpp
LPropContainer.hpp
LPropEvent.hpp
LPropSupport.hpp
LQuat.hpp
LRcObject.hpp
LRegExpr.hpp
LScrCallBack.hpp
LScrMatrix4D.hpp
LScrObjects.hpp
LScrQuat.hpp
LScrRangeSet.hpp
LScrSmartPtr.hpp
LScrTime.hpp
LScrVector4D.hpp
LScriptable.hpp
LSerializable.hpp
LStrConvCap.hpp
LStream.hpp
LStreamImpl.hpp
LString.hpp
LThread.hpp
LTimeValue.hpp
LTypes.hpp
LUIDGen.hpp
LUIDObject.hpp
LUnicode.hpp
LVarArgs.hpp
LVarArray.hpp
LVarDict.hpp
LVarList.hpp
LVariant.hpp
LWrapper.hpp
LineStream.hpp
MapTable.hpp
Matrix3D.hpp
Matrix4D.hpp
MatrixND.hpp
MthrEventCaster.hpp
NamedObject.hpp
NestedPropHandler.hpp
ObjectManager.hpp
PipeStream.hpp
PosixProcImpl.hpp
PrintStream.hpp
PropSpec.hpp
RangeSet.hpp
SingletonBase.hpp
SmartPtr.hpp
StringStream.hpp
TagName.hpp
TestClass.hpp
TimerEvent.hpp
TypeTraits.hpp
Utils.hpp
Vector2D.hpp
Vector4D.hpp
VectorND.hpp
WinProcImpl.hpp
XmlInStream.hpp
mcutils.hpp
qIObjWrapper.h
qlib.hpp
xpcutil.hpp
)

#####

if (${LIBLZMA_FOUND})
  list(APPEND QLIB_LINK_LIBRARIES LibLZMA::LibLZMA)
  list(APPEND QLIB_SRCS XzStream.cpp)
  list(APPEND QLIB_HDRS XzStream.hpp)
endif()

# CueMol interface definitions for MCWRAPGEN
SET(QLIB_MCWG_QIFS
LScrObject.qif
Matrix.qif
Vector.qif
RegExpr.qif
Quat.qif
RangeSet.qif
TimeValue.qif
MsgLog.qif
LScrCallBack.qif
ByteArray.qif
ProcessManager.qif)

# module loader generated by MCWG
SET(QLIB_MODLDR_SRC qlib.moddef)

MCWRAPGEN_CLASS(QLIB_SRCS ${QLIB_MCWG_QIFS})
# list(REMOVE_ITEM QLIB_SRCS "${CMAKE_CURRENT_BINARY_DIR}/LScrObject_wrap.cpp")
list(REMOVE_ITEM QLIB_SRCS "${CMAKE_CURRENT_SOURCE_DIR}/LScrObject_wrap.cpp")
# message(STATUS "MCWG src file output ${QLIB_SRCS}")
# message(STATUS "MCWG hdr file output ${MCWG_HEADERS}")

MCWRAPGEN_MODULE(QLIB_SRCS ${QLIB_MODLDR_SRC} ${QLIB_MCWG_QIFS})
# message(STATUS "src file ${QLIB_SRCS}")

#####################
# qlib library target

# add_library(qlib SHARED)
add_library(qlib STATIC)

if (WIN32)
  target_compile_definitions(qlib PUBLIC QLIB_EXPORTS=1)
else()
  target_compile_options(qlib PUBLIC "-fPIC")
endif()

target_sources(qlib
  PRIVATE ${QLIB_SRCS} ${MCWG_HEADERS}
  PUBLIC FILE_SET HEADERS 
  BASE_DIRS ${PROJECT_SOURCE_DIR}/src
  FILES ${QLIB_HDRS}
)

target_include_directories(
  qlib PRIVATE
  ${CMAKE_SOURCE_DIR}/src
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${CMAKE_BINARY_DIR}/src
  ${Boost_INCLUDE_DIRS}
)

target_link_libraries(qlib PRIVATE ${QLIB_LINK_LIBRARIES})

MCWRAPGEN_SCR_WRAPPERS(qlib)

install(TARGETS qlib
  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
  FILE_SET HEADERS
)
