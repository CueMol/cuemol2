include_directories(
  ${CMAKE_SOURCE_DIR}/src
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${CMAKE_BINARY_DIR}/src
  ${Boost_INCLUDE_DIRS}
  )

# Normal C++ source files
SET(QLIB_SRCS
NamedObject.cpp
LMsgLog.cpp
ClassRegistry.cpp
LClass.cpp
LRcObject.cpp
LVariant.cpp
LPropSupport.cpp
LPropContainer.cpp
LScrObjects.cpp
LScrSmartPtr.cpp
LChar.cpp
LString.cpp
LUnicode.cpp
LThread.cpp
ObjectManager.cpp
Utils.cpp
ArrayIOImpl.cpp
PosixFileStream.cpp
PrintStream.cpp
LineStream.cpp
BinStream.cpp
StringStream.cpp
XmlInStream.cpp
ExpatInStream.cpp
GzipStream.cpp
Base64Stream.cpp
PipeStream.cpp
VectorHelper.cpp
MatrixHelper.cpp
LRegExpr.cpp
LLogEvent.cpp
EventManager.cpp
LDOM2Stream.cpp
LDOM2Tree.cpp
LScrVector4D.cpp
LScrMatrix4D.cpp
LScrQuat.cpp
LScrTime.cpp
LScrRangeSet.cpp
LWrapper.cpp
LDataSrcContainer.cpp
LObjStream3.cpp
LProcMgr.cpp
LPerfMeas.cpp
qlib.cpp
)

# CueMol interface definitions for MCWRAPGEN
SET(QLIB_MCWG_QIFS
Matrix.qif
Vector.qif
RegExpr.qif
Quat.qif
RangeSet.qif
TimeValue.qif
MsgLog.qif
LScrCallBack.qif
ByteArray.qif
ProcessManager.qif)

# module loader generated by MCWG
SET(QLIB_MODLDR_SRC qlib.moddef)

MCWRAPGEN_CLASS(QLIB_SRCS ${QLIB_MCWG_QIFS})
# message(STATUS "MCWG src file output ${QLIB_XX_SRCS}")
# message(STATUS "MCWG hdr file output ${MCWG_HEADERS}")

MCWRAPGEN_MODULE(QLIB_SRCS ${QLIB_MODLDR_SRC} ${QLIB_MCWG_QIFS})
# message(STATUS "src file ${QLIB_SRCS}")

if (WIN32)
  add_definitions(-DQLIB_EXPORTS=1)
endif()

add_library(qlib SHARED ${QLIB_SRCS})
target_link_libraries(qlib PRIVATE pcre expat qmzlib Boost::filesystem Boost::timer Boost::thread)

add_custom_target(qlib_generate_headers DEPENDS ${MCWG_HEADERS})
add_dependencies(qlib qlib_generate_headers)
