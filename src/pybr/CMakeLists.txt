# Dependent libs
SET(PYBR_LINK_LIBRARIES
  Boost::filesystem
  Python3::Python
)

# Normal C++ source files
SET(PYBR_SRCS
  pybr.cpp
  wrapper.cpp
  convert.cpp
  methodobj.cpp
  PythonBridge.cpp
)

# API header files
SET(PYBR_HDRS
  PythonBridge.hpp
  pybr.hpp
  wrapper.hpp
)

#####

# CueMol interface definitions for MCWRAPGEN
SET(PYBR_MCWG_QIFS
  PythonBridge.qif
)

# module loader generated by MCWG
SET(PYBR_MODLDR_SRC pybr.moddef)

MCWRAPGEN_CLASS(PYBR_SRCS ${PYBR_MCWG_QIFS})
MCWRAPGEN_MODULE(PYBR_SRCS ${PYBR_MODLDR_SRC} ${PYBR_MCWG_QIFS})

#####################
# pybr library target

add_library(pybr STATIC)

if (WIN32)
  target_compile_definitions(pybr PUBLIC PYBR_EXPORTS=1)
else()
  target_compile_options(pybr PUBLIC "-fPIC")
endif()

target_sources(pybr
  PRIVATE ${PYBR_SRCS} ${MCWG_HEADERS}
  PUBLIC FILE_SET HEADERS 
  BASE_DIRS ${PROJECT_SOURCE_DIR}/src
  FILES ${PYBR_HDRS}
)

target_include_directories(
  pybr PRIVATE
  ${CMAKE_SOURCE_DIR}/src
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${CMAKE_BINARY_DIR}/src
  ${Boost_INCLUDE_DIRS}
  ${Python3_INCLUDE_DIRS}
)

target_link_libraries(pybr PRIVATE ${PYBR_LINK_LIBRARIES})

MCWRAPGEN_SCR_WRAPPERS(pybr)

install(TARGETS pybr
  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
  FILE_SET HEADERS
  )

set(PYTHON_SCRIPTS
  scripts/__init__.py
  scripts/internal_loader.py
  scripts/cuemol.py
  scripts/fileio.py
  scripts/cmd.py
  scripts/scene_util.py
  scripts/renderer.py
  scripts/mol_util.py
  scripts/povrender.py
  scripts/net_fetch.py
  scripts/wrapper_base.py
)
install(FILES ${PYTHON_SCRIPTS} DESTINATION data/python/cuemol)
install(FILES scripts/wrappers/__init__.py DESTINATION data/python/cuemol/wrappers)
